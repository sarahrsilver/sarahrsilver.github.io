[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sarah Silver",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog Posts",
    "section": "",
    "text": "Yum! Sales\n\n\n\n\n\n\n\n\n\n\n\n\nDec 10, 2023\n\n\n\n\n\n\n  \n\n\n\n\nUniversal Bank GBM\n\n\n\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\n\n\n\n\n  \n\n\n\n\nLHBA House Pricing Regression Model\n\n\n\n\n\n\n\n\n\n\n\n\nOct 15, 2023\n\n\n\n\n\n\n  \n\n\n\n\nDemo Post 2\n\n\n\n\n\n\n\ndecision trees\n\n\nmachine learning\n\n\narrests\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2023\n\n\nJane Doe\n\n\n\n\n\n\n  \n\n\n\n\nDemo Post 1\n\n\n\n\n\n\n\nquarto\n\n\ncrisp-dm\n\n\nscatterplot\n\n\n\n\n\n\n\n\n\n\n\nSep 1, 2023\n\n\nJane Doe\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Yum! Sales/yum_sales.html",
    "href": "posts/Yum! Sales/yum_sales.html",
    "title": "Yum! Sales",
    "section": "",
    "text": "Introduction\nOur dataset comes from real 2022-2023 sales data from a local restaurant, Yum! Kitchen and Bakery. The restaurant is a casual counter service restaurant in the Merriam Park neighborhood of St. Paul with an extensive menu including salads, sandwiches, entrees, as well as coffee and pastries.\nOur goal is to predict sales based on factors including weather, holidays, and local events including games at nearby Allianz Field and the State Fair. Accurate sales predictions is essential in restaurants which tend to have narrow margins, so the business must prepare accordingly.\n\nBusiness Problem\nYum! Kitchen is looking to save money on heat throughout the winter. One of the major factors contributing to Yum! Kitchen’s heating bill is the screened patio, which can be used during the winter but is not well insulated due to the vinyl screen windows, so they are considering closing it on days when the restaurant is not busy enough to justify the cost. They would like to know what factors to consider when deciding whether to close the patio. We will be answering this question by evaluating various external features that could impact sales including local events and weather. By evaluating these features we will discover an educated solution for Yum! Kitchen business problem.\n\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(RColorBrewer)\nlibrary(forecast)\nlibrary(plotly)\nlibrary(corrplot)\nlibrary(caret)\nlibrary(MLmetrics)\nlibrary(fastDummies)\nlibrary(readxl)\nlibrary(showtext)\nfont_add(family = \"Raleway\", \"./Raleway/static/Raleway-Regular.ttf\")\n\nshowtext_auto()\n\n\n\n\nCodebook\n\ncodebook &lt;- data.frame(factor = c('date', 'net_sales', 'lag_sales', 'orders', 'guests', 'holiday','soccer','state_fair','high_temp','low_temp','inches_precipitation','inches_snow', 'mothers_day', 'thanksgiving_catering', 'day_of_week', 'quarter'),\n                       description = c('date', 'total sales per day (USD)', 'net sales on same day of week from week prior', 'number of orders placed', 'number of guests', '1 on significant holidays when restaurant is open, else 0', '1 on days of MNUFC home games at nearby Allianz Field, else 0', '1 on days during the MN State Fair, else 0', 'high temperature in F', 'low temperature in F', 'inches of rain', 'inches of snow', '1 on Mothers Day, else 0', '1 on day before Thanksgiving, when restaurant offers catering, else 0', 'day of week', 'business quarter (1-4)'))\n\nkable(codebook, format = \"markdown\")\n\n\n\n\n\n\n\n\nfactor\ndescription\n\n\n\n\ndate\ndate\n\n\nnet_sales\ntotal sales per day (USD)\n\n\nlag_sales\nnet sales on same day of week from week prior\n\n\norders\nnumber of orders placed\n\n\nguests\nnumber of guests\n\n\nholiday\n1 on significant holidays when restaurant is open, else 0\n\n\nsoccer\n1 on days of MNUFC home games at nearby Allianz Field, else 0\n\n\nstate_fair\n1 on days during the MN State Fair, else 0\n\n\nhigh_temp\nhigh temperature in F\n\n\nlow_temp\nlow temperature in F\n\n\ninches_precipitation\ninches of rain\n\n\ninches_snow\ninches of snow\n\n\nmothers_day\n1 on Mothers Day, else 0\n\n\nthanksgiving_catering\n1 on day before Thanksgiving, when restaurant offers catering, else 0\n\n\nday_of_week\nday of week\n\n\nquarter\nbusiness quarter (1-4)\n\n\n\n\n\n\nsales &lt;- read_excel(\"yum_sales.xlsx\")\n\nsales$date &lt;- as.Date(sales$date)\n#sales$date &lt;- sales$date + 365*2\n#sales$date[1:59] &lt;- sales$date[1:59] +1\nsales &lt;- sales %&gt;% mutate(lag_sales = lag(net_sales, n = 7, default = NA))\nsales &lt;- drop_na(sales)\nsales$holiday &lt;- ifelse(sales$closed ==1, 0, sales$holiday)\n\n\n#median imputation for days when restaurant is closed\nsales &lt;- sales %&gt;%\n  select(-closed) %&gt;%\n  mutate(net_sales = ifelse(net_sales == 0, NA, net_sales)) %&gt;%\n  mutate(net_sales = ifelse(is.na(net_sales), median(net_sales, na.rm = TRUE), net_sales))\n\n#adding columns for mothers_day, thanksgiving_catering, \nsales &lt;- sales %&gt;%\n  mutate(mothers_day = ifelse(date == \"2022-05-08\" | date == \"2023-05-14\", 1, 0)) %&gt;%\n  mutate(thanksgiving_catering = ifelse(date == \"2022-11-23\" | date == \"2023-11-22\", 1, 0)) %&gt;%\n  mutate(holiday = ifelse(mothers_day == 1 | thanksgiving_catering == 1, 0, holiday)) %&gt;%\n  mutate(month = month(as.POSIXlt(date, format=\"%Y/%m/%d\"))) %&gt;%\n  mutate(month_str = ifelse(month &lt;10, paste(0,month, sep = \"\"), month)) %&gt;%\n  mutate(quarter = ifelse(month &lt; 4, 1, ifelse(month &gt; 3 & month &lt; 7, 2, ifelse(month &gt; 6 & month &lt; 10, 3, 4)))) %&gt;%\n  mutate(q_year = paste(year(as.POSIXlt(date, format=\"%Y/%m/%d\")), quarter, sep=\"-\")) %&gt;%\n  mutate(month_year = paste(year(as.POSIXlt(date, format=\"%Y/%m/%d\")), month_str, sep=\"-\")) \n\n#day of week dummy columns\ndow &lt;- sales %&gt;%\n  select(day_of_week)\ndow_dummies &lt;- dummy_cols(dow, remove_first_dummy = TRUE)\nsales &lt;- sales %&gt;%\n  cbind(dow_dummies) %&gt;%\n  select(-day_of_week)\n\n\nx&lt;- ggplot(sales)+\n  geom_line(aes(x = date, y = net_sales), stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n        text=element_text(family = \"Raleway\")\n        )\n\nggplotly(x)\n\n\n\n\n\nAbove is a line plot visualizing daily net sales from 1-1-2022 through 12-3-2023. There are four spikes you can see in the line plot over the two years. These spikes where there is a large amount of sales year after year take place on Mother’s Day and Thanksgiving.\n\nm_box &lt;- ggplot(sales)+ \n  geom_boxplot(aes(x = month_year, y = net_sales, group = month_year))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        text=element_text(family = \"Raleway\"))  \n\nq_box &lt;- ggplot(sales %&gt;% filter(q_year != \"2023-4\")) +\n  geom_boxplot(aes(x= q_year, y = net_sales, group = q_year)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        text=element_text(family = \"Raleway\"))  \n\nggplotly(m_box)\n\n\n\n\nggplotly(q_box)\n\n\n\n\n\n\nline_data_q &lt;- sales %&gt;%\n  filter(q_year != \"2023-4\") %&gt;%\n  group_by(q_year) %&gt;%\n  summarize(quarterly_sales = sum(net_sales)/1000) %&gt;%\n  mutate(q_year = factor(q_year, levels = unique(q_year))) \n\nline_data_m &lt;- sales %&gt;%\n  filter(month_year != \"2023-12\") %&gt;%\n  group_by(month_year) %&gt;%\n  summarize(monthly_sales = sum(net_sales)/1000) %&gt;%\n  mutate(month_year = factor(month_year), levels = unique(month_year))\n\n\n\nline_data_q$month &lt;- as.factor(c(\"2022-02\", \"2022-05\", \"2022-08\", \"2022-11\", \"2023-02\", \"2023-05\", \"2023-08\"))\n\n\n\nq_line &lt;-  ggplot() +\n  geom_line(data = line_data_q, aes(x = month, y = quarterly_sales, label = q_year, group = 1), color = \"darkred\") +\n  geom_line(data = line_data_m, aes(x = month_year, y = monthly_sales, group = 1), color = \"darkblue\")+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        text=element_text(family = \"Raleway\")) +\n  ylab(\"Total Sales per Month/Quarter in Thousands\") \nggplotly(q_line, tooltip = c(\"month_year\", \"quarterly_sales\", \"monthly_sales\", \"q_year\"))\n\n\n\n\n\nIn the line graph above we showcased the fluctuation in total monthly and quarterly net sales. The monthly net_sales is showcased with the blue line and the quarterly net_sales is showcased with the red line. there was a general upward trend with Q2 and Q4 continuously being high performing quarters. Q1 and Q3 consistently under performed compared to the others. One can see the spikes in the blue lines in the months of nearing Mother’s Day and the Months nearing the holiday season.\n\n#data partition with testing data representing Q3 through the end of the dataset in December 2023\ntrain &lt;- sales %&gt;% filter(date &lt;='2023-05-31')\ntest &lt;- sales %&gt;% filter(date &gt;'2023-05-31')\n\n\nc &lt;- cor(sales %&gt;% select(net_sales,high_temp, low_temp, inches_precipitation, inches_snow))\ncorrplot(c)\n\n\n\n\nThe only correlated factors are high_temp and low_temp. We should only use one in our model.\n\n\nFeature Selection\n\nfeaturePlot(keep(sales, is.numeric), sales$net_sales, plot = \"scatter\")\n\n\n\n\nThe feature plot shows us the correlation between each feature and our target variable, net_sales. We will be removing orders and guests as these cannot be known ahead of time. We will be using a polynomial transformation on high_temp and inches_precipitation in order to capture their slightly nonlinear relationships with net_sales.\n\n\nBuilding the Model\n\nlm1 &lt;- lm(net_sales ~ day_of_week_Sunday + day_of_week_Monday + day_of_week_Tuesday + day_of_week_Wednesday + day_of_week_Thursday + day_of_week_Saturday + soccer + holiday + state_fair + poly(high_temp, 2) + inches_precipitation + inches_snow + mothers_day + thanksgiving_catering + month, data = train)\ntest$preds &lt;- predict(lm1, test)\n\nlm_lag &lt;- lm(net_sales ~ day_of_week_Sunday + day_of_week_Monday + day_of_week_Tuesday + day_of_week_Wednesday + day_of_week_Thursday + day_of_week_Saturday + soccer + holiday + state_fair +  poly(high_temp,2) + inches_precipitation + inches_snow  + lag_sales + mothers_day + thanksgiving_catering + month, data = train)\ntest$preds &lt;- predict(lm1, test)\ntest$lag_preds &lt;- predict(lm_lag, test)\ntrain$preds &lt;- predict(lm1, train)\ntrain$lag_preds &lt;- predict(lm_lag, train)\n\npred &lt;- ggplot() +\n  geom_line(data = sales, aes(x = date, y = net_sales)) +\n  geom_line(data = test, aes(x = date, y = lag_preds), color = \"turquoise\", alpha = .7) +\n  geom_line(data = test, aes(x = date, y = preds), color = \"orchid\", alpha = .7) +\n  geom_line(data = train, aes(x = date, y = lag_preds), color = \"blue\", alpha = .6) +\n  geom_line(data = train, aes(x = date, y = preds), color = \"red\", alpha = .6) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        text=element_text(family = \"Raleway\"))  \nggplotly(pred)\n\n\n\n\n\nIn the plot above, the black line represents actual sales. The predictions made by the model without the lag variable, lm1, are shown as the red line on the training data and the dark red line on the testing data. The predictions made by the model with the lag variable, lm_lag, are shown as the blue line on the training data and the dark blue line on the testing data. The graph shows that the inclusion of the lag variable improves the predictions by allowing for bigger fluctuations, which mirrors the realities of sales patterns in the restaurant industry.\n\npar(mfrow = c(2, 2))\nplot(lm1)\n\nWarning: not plotting observations with leverage one:\n  320\n\n\n\n\nplot(lm_lag)\n\nWarning: not plotting observations with leverage one:\n  320\n\n\n\n\n\nThe residuals graphs of both models shows little to no pattern in residual values. This affirms that a linear model is right for our data.\n\nsummary(lm1)$r.sq\n\n[1] 0.7182437\n\nsummary(lm_lag)$r.sq\n\n[1] 0.7301537\n\n\nThe R-squared value for the model including the lag variable is slightly higher. Our lag model accounts for 73% of the variability in the observed net sales.\n\nkable(summary(lm1)$coefficients, format = \"markdown\")\n\n\n\n\n\n\n\n\n\n\n\n\nEstimate\nStd. Error\nt value\nPr(&gt;|t|)\n\n\n\n\n(Intercept)\n7842.90830\n149.67793\n52.3985610\n0.0000000\n\n\nday_of_week_Sunday\n852.55443\n174.52282\n4.8850599\n0.0000014\n\n\nday_of_week_Monday\n-1821.32153\n174.03920\n-10.4650072\n0.0000000\n\n\nday_of_week_Tuesday\n-2191.11144\n173.44527\n-12.6328694\n0.0000000\n\n\nday_of_week_Wednesday\n-1979.34655\n174.64198\n-11.3337383\n0.0000000\n\n\nday_of_week_Thursday\n-1694.52218\n173.87515\n-9.7456262\n0.0000000\n\n\nday_of_week_Saturday\n1217.19007\n181.61808\n6.7019214\n0.0000000\n\n\nsoccer\n662.19919\n238.24589\n2.7794779\n0.0056531\n\n\nholiday\n728.67449\n248.75043\n2.9293397\n0.0035545\n\n\nstate_fair\n-161.09098\n312.33749\n-0.5157593\n0.6062542\n\n\npoly(high_temp, 2)1\n-2392.00707\n1181.69209\n-2.0242219\n0.0434871\n\n\npoly(high_temp, 2)2\n-7143.09908\n1057.99262\n-6.7515585\n0.0000000\n\n\ninches_precipitation\n675.38466\n280.95543\n2.4038854\n0.0165907\n\n\ninches_snow\n-325.18693\n55.46227\n-5.8632104\n0.0000000\n\n\nmothers_day\n8412.97471\n749.92671\n11.2183958\n0.0000000\n\n\nthanksgiving_catering\n6853.92420\n1053.24497\n6.5074360\n0.0000000\n\n\nmonth\n12.48201\n14.70514\n0.8488192\n0.3963947\n\n\n\n\nkable(summary(lm_lag)$coefficients, format = \"markdown\")\n\n\n\n\n\n\n\n\n\n\n\n\nEstimate\nStd. Error\nt value\nPr(&gt;|t|)\n\n\n\n\n(Intercept)\n6832.7360084\n261.8944591\n26.0896547\n0.0000000\n\n\nday_of_week_Sunday\n761.9022928\n172.0736858\n4.4277676\n0.0000117\n\n\nday_of_week_Monday\n-1556.4108806\n179.7406837\n-8.6592020\n0.0000000\n\n\nday_of_week_Tuesday\n-1900.5326748\n181.0154780\n-10.4992827\n0.0000000\n\n\nday_of_week_Wednesday\n-1726.6421834\n179.4905742\n-9.6196817\n0.0000000\n\n\nday_of_week_Thursday\n-1449.6106634\n178.2735043\n-8.1313859\n0.0000000\n\n\nday_of_week_Saturday\n1057.0451340\n181.2142938\n5.8331223\n0.0000000\n\n\nsoccer\n616.5494565\n233.5993645\n2.6393456\n0.0085707\n\n\nholiday\n745.3560325\n243.7103801\n3.0583680\n0.0023470\n\n\nstate_fair\n-209.0072411\n306.1490812\n-0.6826976\n0.4951199\n\n\npoly(high_temp, 2)1\n-2529.7111851\n1158.0020099\n-2.1845482\n0.0293942\n\n\npoly(high_temp, 2)2\n-6610.0794540\n1042.7495341\n-6.3390865\n0.0000000\n\n\ninches_precipitation\n648.8904234\n275.2919394\n2.3570992\n0.0188099\n\n\ninches_snow\n-339.6592135\n54.4215140\n-6.2412673\n0.0000000\n\n\nlag_sales\n0.1293658\n0.0277896\n4.6551951\n0.0000042\n\n\nmothers_day\n8282.1987639\n735.1896003\n11.2653916\n0.0000000\n\n\nthanksgiving_catering\n6659.8649706\n1032.6349101\n6.4493897\n0.0000000\n\n\nmonth\n11.1971366\n14.4082796\n0.7771321\n0.4374551\n\n\n\n\n\n\nsummary(lm1)\n\n\nCall:\nlm(formula = net_sales ~ day_of_week_Sunday + day_of_week_Monday + \n    day_of_week_Tuesday + day_of_week_Wednesday + day_of_week_Thursday + \n    day_of_week_Saturday + soccer + holiday + state_fair + poly(high_temp, \n    2) + inches_precipitation + inches_snow + mothers_day + thanksgiving_catering + \n    month, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4113.7  -679.6   -23.6   597.6  2859.4 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            7842.91     149.68  52.399  &lt; 2e-16 ***\nday_of_week_Sunday      852.55     174.52   4.885 1.40e-06 ***\nday_of_week_Monday    -1821.32     174.04 -10.465  &lt; 2e-16 ***\nday_of_week_Tuesday   -2191.11     173.45 -12.633  &lt; 2e-16 ***\nday_of_week_Wednesday -1979.35     174.64 -11.334  &lt; 2e-16 ***\nday_of_week_Thursday  -1694.52     173.88  -9.746  &lt; 2e-16 ***\nday_of_week_Saturday   1217.19     181.62   6.702 5.65e-11 ***\nsoccer                  662.20     238.25   2.779  0.00565 ** \nholiday                 728.67     248.75   2.929  0.00355 ** \nstate_fair             -161.09     312.34  -0.516  0.60625    \npoly(high_temp, 2)1   -2392.01    1181.69  -2.024  0.04349 *  \npoly(high_temp, 2)2   -7143.10    1057.99  -6.752 4.13e-11 ***\ninches_precipitation    675.38     280.96   2.404  0.01659 *  \ninches_snow            -325.19      55.46  -5.863 8.33e-09 ***\nmothers_day            8412.97     749.93  11.218  &lt; 2e-16 ***\nthanksgiving_catering  6853.92    1053.24   6.507 1.89e-10 ***\nmonth                    12.48      14.71   0.849  0.39639    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1041 on 492 degrees of freedom\nMultiple R-squared:  0.7182,    Adjusted R-squared:  0.7091 \nF-statistic: 78.39 on 16 and 492 DF,  p-value: &lt; 2.2e-16\n\nsummary(lm_lag)\n\n\nCall:\nlm(formula = net_sales ~ day_of_week_Sunday + day_of_week_Monday + \n    day_of_week_Tuesday + day_of_week_Wednesday + day_of_week_Thursday + \n    day_of_week_Saturday + soccer + holiday + state_fair + poly(high_temp, \n    2) + inches_precipitation + inches_snow + lag_sales + mothers_day + \n    thanksgiving_catering + month, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4248.9  -621.6   -55.7   588.2  2907.4 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            6.833e+03  2.619e+02  26.090  &lt; 2e-16 ***\nday_of_week_Sunday     7.619e+02  1.721e+02   4.428 1.17e-05 ***\nday_of_week_Monday    -1.556e+03  1.797e+02  -8.659  &lt; 2e-16 ***\nday_of_week_Tuesday   -1.901e+03  1.810e+02 -10.499  &lt; 2e-16 ***\nday_of_week_Wednesday -1.727e+03  1.795e+02  -9.620  &lt; 2e-16 ***\nday_of_week_Thursday  -1.450e+03  1.783e+02  -8.131 3.49e-15 ***\nday_of_week_Saturday   1.057e+03  1.812e+02   5.833 9.88e-09 ***\nsoccer                 6.165e+02  2.336e+02   2.639  0.00857 ** \nholiday                7.454e+02  2.437e+02   3.058  0.00235 ** \nstate_fair            -2.090e+02  3.061e+02  -0.683  0.49512    \npoly(high_temp, 2)1   -2.530e+03  1.158e+03  -2.185  0.02939 *  \npoly(high_temp, 2)2   -6.610e+03  1.043e+03  -6.339 5.24e-10 ***\ninches_precipitation   6.489e+02  2.753e+02   2.357  0.01881 *  \ninches_snow           -3.397e+02  5.442e+01  -6.241 9.39e-10 ***\nlag_sales              1.294e-01  2.779e-02   4.655 4.17e-06 ***\nmothers_day            8.282e+03  7.352e+02  11.265  &lt; 2e-16 ***\nthanksgiving_catering  6.660e+03  1.033e+03   6.449 2.69e-10 ***\nmonth                  1.120e+01  1.441e+01   0.777  0.43746    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1020 on 491 degrees of freedom\nMultiple R-squared:  0.7302,    Adjusted R-squared:  0.7208 \nF-statistic: 78.15 on 17 and 491 DF,  p-value: &lt; 2.2e-16\n\n\nThe p-values between the two models shows that each model was influenced by a slightly different set of factors.\nThe lm1 model (no lag) found the variables state_fair, high_temp, and inches_precipitation^2 to be not statistically significant at a level of p = 0.05\nThe lm_lag model only found the variables state_fair and inches_precipitation^2 to be not statistically significant at a significance level of p = 0.05.\n\n#changing $0 sales days to $.01 so MAPE calculation doesn't return infinity\ntest$net_sales &lt;- ifelse(test$net_sales == 0, .01, test$net_sales)\n\nMAPE(test$preds, test$net_sales)\n\n[1] 0.1205898\n\nMAPE(test$lag_preds, test$net_sales)\n\n[1] 0.1164119\n\n\nThe MAPE, or mean average percent error, was lower for the model with the lag variable, meaning this model made better predictions than the model without the lag variable.\n\n\nOutcomes\nWe found through our results and outcomes that the quarters with the most net_sales was in Q2 due to a heavy increase in sales on and around mother’s day. There was also a heavy increase in Q4 due to catering for the holiday season with an increase in sales near Thanksgiving and the beginning of Christian and Jewish Holidays.Year over year there tended to be less sales in Q1 and Q3. In the coefficients of the linear regression model, it evaluates how much one specific feature affects the net_sales.\nWe found through this method that they should close the patio during Q1 weekdays. Even though there are many cold days in Q4 we do not recommend closing the patio because this is the most profitable quarter year after year. They should also close the outdoor patio on days when it snows. They should keep it open on days when there is a MN FC United Soccer game or when it is a holiday. The patio should always be open on Mother’s Day and the day before Thanksgiving, because these are the busiest days of the year. For further analysis we would like to gain a better understanding of how the patio’s heating costs might be affected by outdoor temperatures."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Projects are different than posts. Projects should be more expansive, impressive and generally more professional in nature compared to posts. Posts can be works in progress. Small ideas or things you did that you thought were interesting. Projects should really showcase your professional abilities. You don’t need to have too many, just make them good. And try to always have one “in the works” so that employers and collaborators can see that you’re driven.\n\n\n\n\n\n\n\n\n\nNo matching items"
  }
]